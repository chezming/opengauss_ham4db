// Copyright 2014 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.5.0
// source: agent.proto

package dtstruct

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ActionType all action type supported now
type ActionType int32

const (
	ActionType_FAILOVER         ActionType = 0
	ActionType_SWITCHOVER       ActionType = 1
	ActionType_START            ActionType = 10
	ActionType_START_BY_PRIMARY ActionType = 11
	ActionType_START_BY_STANDBY ActionType = 12
	ActionType_START_BY_CASCADE ActionType = 13
	ActionType_START_BY_PENDING ActionType = 14
	ActionType_START_CLUSTER    ActionType = 15
	ActionType_STOP             ActionType = 20
	ActionType_RESTART          ActionType = 23
	ActionType_BUILD            ActionType = 30
	ActionType_BUILD_BY_PRIMARY ActionType = 31
	ActionType_BUILD_BY_STANDBY ActionType = 32
	ActionType_BUILD_BY_CASCADE ActionType = 33
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:  "FAILOVER",
		1:  "SWITCHOVER",
		10: "START",
		11: "START_BY_PRIMARY",
		12: "START_BY_STANDBY",
		13: "START_BY_CASCADE",
		14: "START_BY_PENDING",
		15: "START_CLUSTER",
		20: "STOP",
		23: "RESTART",
		30: "BUILD",
		31: "BUILD_BY_PRIMARY",
		32: "BUILD_BY_STANDBY",
		33: "BUILD_BY_CASCADE",
	}
	ActionType_value = map[string]int32{
		"FAILOVER":         0,
		"SWITCHOVER":       1,
		"START":            10,
		"START_BY_PRIMARY": 11,
		"START_BY_STANDBY": 12,
		"START_BY_CASCADE": 13,
		"START_BY_PENDING": 14,
		"START_CLUSTER":    15,
		"STOP":             20,
		"RESTART":          23,
		"BUILD":            30,
		"BUILD_BY_PRIMARY": 31,
		"BUILD_BY_STANDBY": 32,
		"BUILD_BY_CASCADE": 33,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_agent_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_agent_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

// BaseInfo instance basic info
type BaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeName      string `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeIp        string `protobuf:"bytes,2,opt,name=node_ip,json=nodeIp,proto3" json:"node_ip,omitempty"`
	DataPath      string `protobuf:"bytes,5,opt,name=data_path,json=dataPath,proto3" json:"data_path,omitempty"`
	DatanodePort  int32  `protobuf:"varint,6,opt,name=datanode_port,json=datanodePort,proto3" json:"datanode_port,omitempty"`
	InstanceId    string `protobuf:"bytes,10,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	InstanceRole  string `protobuf:"bytes,11,opt,name=instance_role,json=instanceRole,proto3" json:"instance_role,omitempty"`
	InstanceState string `protobuf:"bytes,12,opt,name=instance_state,json=instanceState,proto3" json:"instance_state,omitempty"`
	HaState       string `protobuf:"bytes,13,opt,name=ha_state,json=haState,proto3" json:"ha_state,omitempty"`
	GaussVersion  string `protobuf:"bytes,20,opt,name=gauss_version,json=gaussVersion,proto3" json:"gauss_version,omitempty"`
	GsClusterName string `protobuf:"bytes,30,opt,name=gs_cluster_name,json=gsClusterName,proto3" json:"gs_cluster_name,omitempty"`
}

func (x *BaseInfo) Reset() {
	*x = BaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseInfo) ProtoMessage() {}

func (x *BaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseInfo.ProtoReflect.Descriptor instead.
func (*BaseInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{0}
}

func (x *BaseInfo) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *BaseInfo) GetNodeIp() string {
	if x != nil {
		return x.NodeIp
	}
	return ""
}

func (x *BaseInfo) GetDataPath() string {
	if x != nil {
		return x.DataPath
	}
	return ""
}

func (x *BaseInfo) GetDatanodePort() int32 {
	if x != nil {
		return x.DatanodePort
	}
	return 0
}

func (x *BaseInfo) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *BaseInfo) GetInstanceRole() string {
	if x != nil {
		return x.InstanceRole
	}
	return ""
}

func (x *BaseInfo) GetInstanceState() string {
	if x != nil {
		return x.InstanceState
	}
	return ""
}

func (x *BaseInfo) GetHaState() string {
	if x != nil {
		return x.HaState
	}
	return ""
}

func (x *BaseInfo) GetGaussVersion() string {
	if x != nil {
		return x.GaussVersion
	}
	return ""
}

func (x *BaseInfo) GetGsClusterName() string {
	if x != nil {
		return x.GsClusterName
	}
	return ""
}

// node sync info
type SyncInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalRole                string `protobuf:"bytes,1,opt,name=local_role,json=localRole,proto3" json:"local_role,omitempty"`
	State                    string `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	SenderSentLocation       string `protobuf:"bytes,10,opt,name=sender_sent_location,json=senderSentLocation,proto3" json:"sender_sent_location,omitempty"`
	SenderWriteLocation      string `protobuf:"bytes,11,opt,name=sender_write_location,json=senderWriteLocation,proto3" json:"sender_write_location,omitempty"`
	SenderFlushLocation      string `protobuf:"bytes,12,opt,name=sender_flush_location,json=senderFlushLocation,proto3" json:"sender_flush_location,omitempty"`
	SenderReplayLocation     string `protobuf:"bytes,13,opt,name=sender_replay_location,json=senderReplayLocation,proto3" json:"sender_replay_location,omitempty"`
	ReceiverReceivedLocation string `protobuf:"bytes,14,opt,name=receiver_received_location,json=receiverReceivedLocation,proto3" json:"receiver_received_location,omitempty"`
	ReceiverWriteLocation    string `protobuf:"bytes,15,opt,name=receiver_write_location,json=receiverWriteLocation,proto3" json:"receiver_write_location,omitempty"`
	ReceiverFlushLocation    string `protobuf:"bytes,16,opt,name=receiver_flush_location,json=receiverFlushLocation,proto3" json:"receiver_flush_location,omitempty"`
	ReceiverReplayLocation   string `protobuf:"bytes,17,opt,name=receiver_replay_location,json=receiverReplayLocation,proto3" json:"receiver_replay_location,omitempty"`
	SyncPercent              int32  `protobuf:"varint,30,opt,name=sync_percent,json=syncPercent,proto3" json:"sync_percent,omitempty"`
	SyncState                string `protobuf:"bytes,31,opt,name=sync_state,json=syncState,proto3" json:"sync_state,omitempty"`
	SyncMode                 string `protobuf:"bytes,32,opt,name=sync_mode,json=syncMode,proto3" json:"sync_mode,omitempty"`
	Channel                  string `protobuf:"bytes,50,opt,name=channel,proto3" json:"channel,omitempty"`
}

func (x *SyncInfo) Reset() {
	*x = SyncInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncInfo) ProtoMessage() {}

func (x *SyncInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncInfo.ProtoReflect.Descriptor instead.
func (*SyncInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{1}
}

func (x *SyncInfo) GetLocalRole() string {
	if x != nil {
		return x.LocalRole
	}
	return ""
}

func (x *SyncInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SyncInfo) GetSenderSentLocation() string {
	if x != nil {
		return x.SenderSentLocation
	}
	return ""
}

func (x *SyncInfo) GetSenderWriteLocation() string {
	if x != nil {
		return x.SenderWriteLocation
	}
	return ""
}

func (x *SyncInfo) GetSenderFlushLocation() string {
	if x != nil {
		return x.SenderFlushLocation
	}
	return ""
}

func (x *SyncInfo) GetSenderReplayLocation() string {
	if x != nil {
		return x.SenderReplayLocation
	}
	return ""
}

func (x *SyncInfo) GetReceiverReceivedLocation() string {
	if x != nil {
		return x.ReceiverReceivedLocation
	}
	return ""
}

func (x *SyncInfo) GetReceiverWriteLocation() string {
	if x != nil {
		return x.ReceiverWriteLocation
	}
	return ""
}

func (x *SyncInfo) GetReceiverFlushLocation() string {
	if x != nil {
		return x.ReceiverFlushLocation
	}
	return ""
}

func (x *SyncInfo) GetReceiverReplayLocation() string {
	if x != nil {
		return x.ReceiverReplayLocation
	}
	return ""
}

func (x *SyncInfo) GetSyncPercent() int32 {
	if x != nil {
		return x.SyncPercent
	}
	return 0
}

func (x *SyncInfo) GetSyncState() string {
	if x != nil {
		return x.SyncState
	}
	return ""
}

func (x *SyncInfo) GetSyncMode() string {
	if x != nil {
		return x.SyncMode
	}
	return ""
}

func (x *SyncInfo) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

// node info include basic and sync
type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseInfo       *BaseInfo   `protobuf:"bytes,1,opt,name=base_info,json=baseInfo,proto3" json:"base_info,omitempty"`
	SyncInfo       *SyncInfo   `protobuf:"bytes,2,opt,name=sync_info,json=syncInfo,proto3" json:"sync_info,omitempty"`
	Upstream       *BaseInfo   `protobuf:"bytes,3,opt,name=upstream,proto3" json:"upstream,omitempty"`
	DownstreamList []*BaseInfo `protobuf:"bytes,4,rep,name=downstream_list,json=downstreamList,proto3" json:"downstream_list,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{2}
}

func (x *NodeInfo) GetBaseInfo() *BaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

func (x *NodeInfo) GetSyncInfo() *SyncInfo {
	if x != nil {
		return x.SyncInfo
	}
	return nil
}

func (x *NodeInfo) GetUpstream() *BaseInfo {
	if x != nil {
		return x.Upstream
	}
	return nil
}

func (x *NodeInfo) GetDownstreamList() []*BaseInfo {
	if x != nil {
		return x.DownstreamList
	}
	return nil
}

// DatabaseInfoRequest used in CollectInfo rpc
type DatabaseInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromCache bool `protobuf:"varint,1,opt,name=from_cache,json=fromCache,proto3" json:"from_cache,omitempty"` // get info from cache or not
}

func (x *DatabaseInfoRequest) Reset() {
	*x = DatabaseInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInfoRequest) ProtoMessage() {}

func (x *DatabaseInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseInfoRequest.ProtoReflect.Descriptor instead.
func (*DatabaseInfoRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{3}
}

func (x *DatabaseInfoRequest) GetFromCache() bool {
	if x != nil {
		return x.FromCache
	}
	return false
}

// DatabaseInfoResponse used as CollectInfo rpc response
type DatabaseInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeInfo *NodeInfo `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
}

func (x *DatabaseInfoResponse) Reset() {
	*x = DatabaseInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInfoResponse) ProtoMessage() {}

func (x *DatabaseInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseInfoResponse.ProtoReflect.Descriptor instead.
func (*DatabaseInfoResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{4}
}

func (x *DatabaseInfoResponse) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

// ManageActionRequest used in ManageAction rpc
type ManageActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType ActionType `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=dtstruct.ActionType" json:"action_type,omitempty"`
}

func (x *ManageActionRequest) Reset() {
	*x = ManageActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageActionRequest) ProtoMessage() {}

func (x *ManageActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageActionRequest.ProtoReflect.Descriptor instead.
func (*ManageActionRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{5}
}

func (x *ManageActionRequest) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_FAILOVER
}

// ManageActionResponse used as ManageAction rpc response
type ManageActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ManageActionResponse) Reset() {
	*x = ManageActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManageActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManageActionResponse) ProtoMessage() {}

func (x *ManageActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManageActionResponse.ProtoReflect.Descriptor instead.
func (*ManageActionResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{6}
}

func (x *ManageActionResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// UpdateSyncConfigRequest used for UpdateSyncConfig rpc
type UpdateSyncConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncConf string `protobuf:"bytes,1,opt,name=sync_conf,json=syncConf,proto3" json:"sync_conf,omitempty"` // sync config
}

func (x *UpdateSyncConfigRequest) Reset() {
	*x = UpdateSyncConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSyncConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSyncConfigRequest) ProtoMessage() {}

func (x *UpdateSyncConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSyncConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateSyncConfigRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSyncConfigRequest) GetSyncConf() string {
	if x != nil {
		return x.SyncConf
	}
	return ""
}

// UpdateSyncConfigResponse used as UpdateSyncConfig rpc response
type UpdateSyncConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SyncStandby string `protobuf:"bytes,1,opt,name=sync_standby,json=syncStandby,proto3" json:"sync_standby,omitempty"` // cluster sync config currently
}

func (x *UpdateSyncConfigResponse) Reset() {
	*x = UpdateSyncConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSyncConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSyncConfigResponse) ProtoMessage() {}

func (x *UpdateSyncConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSyncConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateSyncConfigResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSyncConfigResponse) GetSyncStandby() string {
	if x != nil {
		return x.SyncStandby
	}
	return ""
}

// ReplicationConfirmRequest used for ReplicationConfirm rpc
type ReplicationConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfirmNodename string `protobuf:"bytes,1,opt,name=confirm_nodename,json=confirmNodename,proto3" json:"confirm_nodename,omitempty"` // nodename of replication peer
	Upstream        bool   `protobuf:"varint,2,opt,name=upstream,proto3" json:"upstream,omitempty"`                                     // upstream or downstream
}

func (x *ReplicationConfirmRequest) Reset() {
	*x = ReplicationConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationConfirmRequest) ProtoMessage() {}

func (x *ReplicationConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationConfirmRequest.ProtoReflect.Descriptor instead.
func (*ReplicationConfirmRequest) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{9}
}

func (x *ReplicationConfirmRequest) GetConfirmNodename() string {
	if x != nil {
		return x.ConfirmNodename
	}
	return ""
}

func (x *ReplicationConfirmRequest) GetUpstream() bool {
	if x != nil {
		return x.Upstream
	}
	return false
}

// ReplicationConfirmResponse used as ReplicationConfirm rpc response
type ReplicationConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Normal bool `protobuf:"varint,1,opt,name=normal,proto3" json:"normal,omitempty"` // replication is normal or not
}

func (x *ReplicationConfirmResponse) Reset() {
	*x = ReplicationConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicationConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationConfirmResponse) ProtoMessage() {}

func (x *ReplicationConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationConfirmResponse.ProtoReflect.Descriptor instead.
func (*ReplicationConfirmResponse) Descriptor() ([]byte, []int) {
	return file_agent_proto_rawDescGZIP(), []int{10}
}

func (x *ReplicationConfirmResponse) GetNormal() bool {
	if x != nil {
		return x.Normal
	}
	return false
}

var File_agent_proto protoreflect.FileDescriptor

var file_agent_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64,
	0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0xd7, 0x02, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x61, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61, 0x75, 0x73, 0x73, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x61, 0x75,
	0x73, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x67, 0x73, 0x5f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x67, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xf0, 0x04, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x46, 0x6c, 0x75, 0x73, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a,
	0x16, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x1a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x38, 0x0a, 0x18, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xd9, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x3b, 0x0a, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64,
	0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x34, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x22, 0x47, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x4c, 0x0a, 0x13, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x64, 0x74,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2a, 0x0a,
	0x14, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x36, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x22, 0x3d, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x62, 0x79,
	0x22, 0x62, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x4e, 0x6f, 0x64, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x22, 0x34, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x2a, 0x84, 0x02, 0x0a, 0x0a, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x49,
	0x4c, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x57, 0x49, 0x54, 0x43,
	0x48, 0x4f, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x50,
	0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x5f, 0x42, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x0c, 0x12, 0x14,
	0x0a, 0x10, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x41, 0x53, 0x43, 0x41,
	0x44, 0x45, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x59,
	0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x0e, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x5f, 0x43, 0x4c, 0x55, 0x53, 0x54, 0x45, 0x52, 0x10, 0x0f, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x14, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x10, 0x17, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x10, 0x1e, 0x12,
	0x14, 0x0a, 0x10, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x50, 0x52, 0x49, 0x4d,
	0x41, 0x52, 0x59, 0x10, 0x1f, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x42,
	0x59, 0x5f, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x20, 0x12, 0x14, 0x0a, 0x10, 0x42,
	0x55, 0x49, 0x4c, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x43, 0x41, 0x53, 0x43, 0x41, 0x44, 0x45, 0x10,
	0x21, 0x32, 0xf1, 0x02, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x67, 0x61, 0x75, 0x73, 0x73, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0c, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x2e, 0x64, 0x74, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x64,
	0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x6e, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x61, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x23, 0x2e, 0x64, 0x74, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x64, 0x74, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x64, 0x74, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agent_proto_rawDescOnce sync.Once
	file_agent_proto_rawDescData = file_agent_proto_rawDesc
)

func file_agent_proto_rawDescGZIP() []byte {
	file_agent_proto_rawDescOnce.Do(func() {
		file_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_agent_proto_rawDescData)
	})
	return file_agent_proto_rawDescData
}

var file_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_agent_proto_goTypes = []interface{}{
	(ActionType)(0),                    // 0: dtstruct.ActionType
	(*BaseInfo)(nil),                   // 1: dtstruct.BaseInfo
	(*SyncInfo)(nil),                   // 2: dtstruct.SyncInfo
	(*NodeInfo)(nil),                   // 3: dtstruct.NodeInfo
	(*DatabaseInfoRequest)(nil),        // 4: dtstruct.DatabaseInfoRequest
	(*DatabaseInfoResponse)(nil),       // 5: dtstruct.DatabaseInfoResponse
	(*ManageActionRequest)(nil),        // 6: dtstruct.ManageActionRequest
	(*ManageActionResponse)(nil),       // 7: dtstruct.ManageActionResponse
	(*UpdateSyncConfigRequest)(nil),    // 8: dtstruct.UpdateSyncConfigRequest
	(*UpdateSyncConfigResponse)(nil),   // 9: dtstruct.UpdateSyncConfigResponse
	(*ReplicationConfirmRequest)(nil),  // 10: dtstruct.ReplicationConfirmRequest
	(*ReplicationConfirmResponse)(nil), // 11: dtstruct.ReplicationConfirmResponse
}
var file_agent_proto_depIdxs = []int32{
	1,  // 0: dtstruct.NodeInfo.base_info:type_name -> dtstruct.BaseInfo
	2,  // 1: dtstruct.NodeInfo.sync_info:type_name -> dtstruct.SyncInfo
	1,  // 2: dtstruct.NodeInfo.upstream:type_name -> dtstruct.BaseInfo
	1,  // 3: dtstruct.NodeInfo.downstream_list:type_name -> dtstruct.BaseInfo
	3,  // 4: dtstruct.DatabaseInfoResponse.node_info:type_name -> dtstruct.NodeInfo
	0,  // 5: dtstruct.ManageActionRequest.action_type:type_name -> dtstruct.ActionType
	4,  // 6: dtstruct.OpengaussAgent.CollectInfo:input_type -> dtstruct.DatabaseInfoRequest
	6,  // 7: dtstruct.OpengaussAgent.ManageAction:input_type -> dtstruct.ManageActionRequest
	8,  // 8: dtstruct.OpengaussAgent.UpdateSyncConfig:input_type -> dtstruct.UpdateSyncConfigRequest
	10, // 9: dtstruct.OpengaussAgent.ReplicationConfirm:input_type -> dtstruct.ReplicationConfirmRequest
	5,  // 10: dtstruct.OpengaussAgent.CollectInfo:output_type -> dtstruct.DatabaseInfoResponse
	7,  // 11: dtstruct.OpengaussAgent.ManageAction:output_type -> dtstruct.ManageActionResponse
	9,  // 12: dtstruct.OpengaussAgent.UpdateSyncConfig:output_type -> dtstruct.UpdateSyncConfigResponse
	11, // 13: dtstruct.OpengaussAgent.ReplicationConfirm:output_type -> dtstruct.ReplicationConfirmResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_agent_proto_init() }
func file_agent_proto_init() {
	if File_agent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManageActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSyncConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSyncConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicationConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agent_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agent_proto_goTypes,
		DependencyIndexes: file_agent_proto_depIdxs,
		EnumInfos:         file_agent_proto_enumTypes,
		MessageInfos:      file_agent_proto_msgTypes,
	}.Build()
	File_agent_proto = out.File
	file_agent_proto_rawDesc = nil
	file_agent_proto_goTypes = nil
	file_agent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OpengaussAgentClient is the client API for OpengaussAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OpengaussAgentClient interface {
	// collect opengauss base info
	CollectInfo(ctx context.Context, in *DatabaseInfoRequest, opts ...grpc.CallOption) (*DatabaseInfoResponse, error)
	// manage opengauss, such as start/stop/build...
	ManageAction(ctx context.Context, in *ManageActionRequest, opts ...grpc.CallOption) (*ManageActionResponse, error)
	// update opengauss sync config
	UpdateSyncConfig(ctx context.Context, in *UpdateSyncConfigRequest, opts ...grpc.CallOption) (*UpdateSyncConfigResponse, error)
	// update opengauss sync config
	ReplicationConfirm(ctx context.Context, in *ReplicationConfirmRequest, opts ...grpc.CallOption) (*ReplicationConfirmResponse, error)
}

type opengaussAgentClient struct {
	cc grpc.ClientConnInterface
}

func NewOpengaussAgentClient(cc grpc.ClientConnInterface) OpengaussAgentClient {
	return &opengaussAgentClient{cc}
}

func (c *opengaussAgentClient) CollectInfo(ctx context.Context, in *DatabaseInfoRequest, opts ...grpc.CallOption) (*DatabaseInfoResponse, error) {
	out := new(DatabaseInfoResponse)
	err := c.cc.Invoke(ctx, "/dtstruct.OpengaussAgent/CollectInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opengaussAgentClient) ManageAction(ctx context.Context, in *ManageActionRequest, opts ...grpc.CallOption) (*ManageActionResponse, error) {
	out := new(ManageActionResponse)
	err := c.cc.Invoke(ctx, "/dtstruct.OpengaussAgent/ManageAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opengaussAgentClient) UpdateSyncConfig(ctx context.Context, in *UpdateSyncConfigRequest, opts ...grpc.CallOption) (*UpdateSyncConfigResponse, error) {
	out := new(UpdateSyncConfigResponse)
	err := c.cc.Invoke(ctx, "/dtstruct.OpengaussAgent/UpdateSyncConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *opengaussAgentClient) ReplicationConfirm(ctx context.Context, in *ReplicationConfirmRequest, opts ...grpc.CallOption) (*ReplicationConfirmResponse, error) {
	out := new(ReplicationConfirmResponse)
	err := c.cc.Invoke(ctx, "/dtstruct.OpengaussAgent/ReplicationConfirm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OpengaussAgentServer is the server API for OpengaussAgent service.
type OpengaussAgentServer interface {
	// collect opengauss base info
	CollectInfo(context.Context, *DatabaseInfoRequest) (*DatabaseInfoResponse, error)
	// manage opengauss, such as start/stop/build...
	ManageAction(context.Context, *ManageActionRequest) (*ManageActionResponse, error)
	// update opengauss sync config
	UpdateSyncConfig(context.Context, *UpdateSyncConfigRequest) (*UpdateSyncConfigResponse, error)
	// update opengauss sync config
	ReplicationConfirm(context.Context, *ReplicationConfirmRequest) (*ReplicationConfirmResponse, error)
}

// UnimplementedOpengaussAgentServer can be embedded to have forward compatible implementations.
type UnimplementedOpengaussAgentServer struct {
}

func (*UnimplementedOpengaussAgentServer) CollectInfo(context.Context, *DatabaseInfoRequest) (*DatabaseInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CollectInfo not implemented")
}
func (*UnimplementedOpengaussAgentServer) ManageAction(context.Context, *ManageActionRequest) (*ManageActionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ManageAction not implemented")
}
func (*UnimplementedOpengaussAgentServer) UpdateSyncConfig(context.Context, *UpdateSyncConfigRequest) (*UpdateSyncConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSyncConfig not implemented")
}
func (*UnimplementedOpengaussAgentServer) ReplicationConfirm(context.Context, *ReplicationConfirmRequest) (*ReplicationConfirmResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicationConfirm not implemented")
}

func RegisterOpengaussAgentServer(s *grpc.Server, srv OpengaussAgentServer) {
	s.RegisterService(&_OpengaussAgent_serviceDesc, srv)
}

func _OpengaussAgent_CollectInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatabaseInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpengaussAgentServer).CollectInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dtstruct.OpengaussAgent/CollectInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpengaussAgentServer).CollectInfo(ctx, req.(*DatabaseInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpengaussAgent_ManageAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ManageActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpengaussAgentServer).ManageAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dtstruct.OpengaussAgent/ManageAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpengaussAgentServer).ManageAction(ctx, req.(*ManageActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpengaussAgent_UpdateSyncConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSyncConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpengaussAgentServer).UpdateSyncConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dtstruct.OpengaussAgent/UpdateSyncConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpengaussAgentServer).UpdateSyncConfig(ctx, req.(*UpdateSyncConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OpengaussAgent_ReplicationConfirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicationConfirmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OpengaussAgentServer).ReplicationConfirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dtstruct.OpengaussAgent/ReplicationConfirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OpengaussAgentServer).ReplicationConfirm(ctx, req.(*ReplicationConfirmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OpengaussAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dtstruct.OpengaussAgent",
	HandlerType: (*OpengaussAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CollectInfo",
			Handler:    _OpengaussAgent_CollectInfo_Handler,
		},
		{
			MethodName: "ManageAction",
			Handler:    _OpengaussAgent_ManageAction_Handler,
		},
		{
			MethodName: "UpdateSyncConfig",
			Handler:    _OpengaussAgent_UpdateSyncConfig_Handler,
		},
		{
			MethodName: "ReplicationConfirm",
			Handler:    _OpengaussAgent_ReplicationConfirm_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "agent.proto",
}
